group 'BestExchangeProject'
//version '1.0-SNAPSHOT'


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'




repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
configurations {
    jaxb
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
    }
}

// tag::wsdl[]

// end::wsdl[]


war {
//    doFirst{
//        genJaxb.execute()
//    }
    war.baseName = 'cbws'

}
//task genJaxb {
//    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
//    ext.classesDir = "${buildDir}/classes/jaxb"
//    ext.schema = "src/main/resources/cb.xsd"
//
//    outputs.dir classesDir
//
//    doLast() {
//        project.ant {
//            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
//                    classpath: configurations.jaxb.asPath
//            mkdir(dir: sourcesDir)
//            mkdir(dir: classesDir)
//
//            xjc(destdir: sourcesDir, schema: schema,
//                    package: "hello.wsdl") {
//                arg(value: "-wsdl")
//                produces(dir: sourcesDir, includes: "**/*.java")
//            }
//
//            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
//                    debugLevel: "lines,vars,source",
//                    classpath: configurations.jaxb.asPath) {
//                src(path: sourcesDir)
//                include(name: "**/*.java")
//                include(name: "*.java")
//            }
//
//            copy(todir: classesDir) {
//                fileset(dir: sourcesDir, erroronmissingdir: false) {
//                    exclude(name: "**/*.java")
//                }
//            }
//        }
//    }
//}
dependencies {
    compile 'org.springframework.ws:spring-ws-core:2.3.0.RELEASE'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '1.3.6.RELEASE', ext: 'pom'
    compile("org.springframework.ws:spring-ws-core")
//     compile(files(genJaxb.classesDir).builtBy(genJaxb))
// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.2'
     jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {

    }
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    // https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-jasper

    compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
    testCompile("junit:junit")
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    compile group: 'org.jsoup', name: 'jsoup', version: '1.7.2'
// https://mvnrepository.com/artifact/postgresql/postgresql
    compile 'postgresql:postgresql:9.1-901-1.jdbc4'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'


}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}